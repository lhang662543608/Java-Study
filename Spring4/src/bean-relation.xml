<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        抽象bean:bean的abstract属性为true的bean，这样的bean不能被IOC容器实例化，只用来被继承配置
        若某一个bean 的class属性没有被指定，则该bean必须是一个抽象的bean。
    -->
    <bean id="address" class="Spring4.beans.autowire.Address" p:city="beijing^" p:street="wudaokou"
          abstract="true"></bean>

    <!--bean配置的继承，使用bean的parent属性指定继承那个bean的配置-->
    <bean id="address2" parent="address" p:city="beijing"></bean>
    <bean id="address3" parent="address2" p:street="dazongsi"></bean>

    <bean class="Spring4.beans.autowire.Car" id="car" p:brand="Audi" p:price="30000"></bean>

    <!--
    要求在配置Person时，必须有一个关联的car！
        换句话说person这个bean依赖于Car这个bean。
        Spring允许用户通过depends-on属性设定Bean前置依赖的Bean，前置依赖的Bean会在本bean实例化之前创建好，
        如果前置依赖于多个bean，则可以通过逗号、空格 区分多个bean
    -->
    <bean class="Spring4.beans.autowire.Person" id="person"
          p:name="Tom" p:address-ref="address2"
          depends-on="car"></bean>
</beans>